{"version":3,"sources":["Assets/images/image-equilibrium.jpg","Assets/images/crop.jpg","Assets/images/icon-ethereum.svg","Assets/images/icon-clock.svg","Assets/images/icon-view.svg","Components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","useState","active","setActive","hoverAuthor","setHoverAuthor","hoverTitle","setHoverTitle","clickHandler","prev","hoverHandler","hoverTitleHandler","className","onMouseEnter","onMouseLeave","src","Equilibrum","alt","View","style","color","Eth","Clock","Avatar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAe,MAA0B,8CCA1B,MAA0B,iCCA1B,MAA0B,0CCA1B,MAA0B,uCCA1B,MAA0B,sC,OC4D1BA,EApDF,WAAO,IAAD,EACaC,oBAAS,GADtB,mBACRC,EADQ,KACAC,EADA,OAEuBF,oBAAS,GAFhC,mBAERG,EAFQ,KAEKC,EAFL,OAGqBJ,oBAAS,GAH9B,mBAGRK,EAHQ,KAGIC,EAHJ,KAITC,EAAe,WACjBL,GAAU,SAAAM,GAAI,OAAKA,MAGjBC,EAAe,WACjBL,GAAe,SAAAI,GAAI,OAAKA,MAGtBE,EAAoB,WACtBJ,GAAc,SAAAE,GAAI,OAAKA,MAE3B,OACI,sBAAKG,UAAU,OAAf,UACI,sBAAKA,UAAU,QAASC,aAAcL,EAAcM,aAAcN,EAAlE,UACI,qBAAKO,IAAKC,EAAYC,IAAI,SACzBf,GACD,qBAAKU,UAAU,MAAf,SACI,qBAAKG,IAAKG,EAAMD,IAAI,cAI5B,sBAAKL,UAAU,aAAf,UACI,oBAAIA,UAAU,QAAQC,aAAcF,EAAmBG,aAAcH,EAAmBQ,MAAO,CAACC,MAAOd,GAAc,QAArH,+BACA,mBAAGM,UAAU,OAAb,sEAEJ,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKG,IAAKM,EAAKJ,IAAI,aACnB,gDAEJ,sBAAKL,UAAU,OAAf,UACI,qBAAKG,IAAKO,EAAOL,IAAI,aACrB,sDAGR,oBAAIL,UAAU,YACd,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKG,IAAKQ,EAAQN,IAAI,YAE1B,qBAAKL,UAAU,eAAf,SACI,6CAAe,mBAAGC,aAAcH,EAAcI,aAAcJ,EAAcS,MAAO,CAACC,MAAOhB,GAAe,QAAzF,0CCzCpBoB,MARf,WACE,OACE,qBAAKZ,UAAU,YAAf,SACE,cAAC,EAAD,OCKSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0852505b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image-equilibrium.88bdbc91.jpg\";","export default __webpack_public_path__ + \"static/media/crop.ae2b9029.jpg\";","export default __webpack_public_path__ + \"static/media/icon-ethereum.5221f332.svg\";","export default __webpack_public_path__ + \"static/media/icon-clock.991a6522.svg\";","export default __webpack_public_path__ + \"static/media/icon-view.fedac551.svg\";","import React, { useState} from 'react';\r\nimport '../../Style/style.css';\r\nimport Equilibrum from '../../Assets/images/image-equilibrium.jpg';\r\nimport Avatar from '../../Assets/images/crop.jpg';\r\nimport Eth from '../../Assets/images/icon-ethereum.svg';\r\nimport Clock from '../../Assets/images/icon-clock.svg';\r\nimport View from '../../Assets/images/icon-view.svg';\r\n\r\nconst Card = () => {\r\n    const [active, setActive] = useState(false);\r\n    const [hoverAuthor, setHoverAuthor] = useState(false);\r\n    const [hoverTitle, setHoverTitle] = useState(false);\r\n    const clickHandler = () => {\r\n        setActive(prev => !prev)\r\n    }\r\n\r\n    const hoverHandler = () => {\r\n        setHoverAuthor(prev => !prev)\r\n    }\r\n\r\n    const hoverTitleHandler = () => {\r\n        setHoverTitle(prev => !prev)\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"image\"  onMouseEnter={clickHandler} onMouseLeave={clickHandler}>\r\n                <img src={Equilibrum} alt=\"cube\" />\r\n                {active && \r\n                <div className=\"box\">\r\n                    <img src={View} alt=\"cube\" />\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className=\"text-group\">\r\n                <h1 className=\"title\" onMouseEnter={hoverTitleHandler} onMouseLeave={hoverTitleHandler} style={{color: hoverTitle && 'cyan'}}>Equilibrium #3429</h1>\r\n                <p className=\"para\">Our Equilibrium collection promotes balance and calm.</p>\r\n            </div>\r\n            <div className=\"ratings\">\r\n                <div className=\"currency\">\r\n                    <img src={Eth} alt=\"Ethereum\" />\r\n                    <span>0.041 ETH</span> \r\n                </div>\r\n                <div className=\"time\">\r\n                    <img src={Clock} alt=\"Ethereum\" />\r\n                    <span> 3 days left</span>\r\n                </div>\r\n            </div>\r\n            <hr className=\"hr_line\" />\r\n            <div className=\"profile\">\r\n                <div className=\"profile_img\">\r\n                    <img src={Avatar} alt=\"david\" />\r\n                </div>\r\n                <div className=\"profile_text\">\r\n                    <p>Creation of <b onMouseEnter={hoverHandler} onMouseLeave={hoverHandler} style={{color: hoverAuthor && 'cyan'}}>Ologunleko David</b></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React  from 'react';\nimport './Style/style.css';\nimport Card from './Components/Card/Card';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}